name: Deploy to Vercel

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.14.0
      
      - name: Install dependencies
        run: pnpm install
      
      - name: Run tests
        run: pnpm test:unit
      
      - name: Build API
        run: pnpm api:build

  build-widget:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.14.0
      
      - name: Install widget dependencies
        working-directory: widget
        run: pnpm install
      
      - name: Lint widget
        working-directory: widget
        run: pnpm lint
      
      - name: Build widget
        working-directory: widget
        run: pnpm build
        env:
          VITE_API_URL: ${{ vars.VITE_API_URL || 'https://articles-assistant-2vje27hyp-chin-hua-chens-projects.vercel.app' }}
      
      - name: Upload widget artifacts
        uses: actions/upload-artifact@v4
        with:
          name: widget-dist
          path: widget/dist/
          retention-days: 30

  deploy:
    runs-on: ubuntu-latest
    needs: [test, build-widget]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Download widget artifacts
        uses: actions/download-artifact@v4
        with:
          name: widget-dist
          path: widget/dist/

      - name: Deploy widget to CDN
        run: |
          # TODO: Upload widget files to CDN or static hosting
          echo "Widget built and ready for deployment"